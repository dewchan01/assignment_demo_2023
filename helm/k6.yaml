apiVersion: batch/v1
kind: Job
metadata:
  name: k6-job
spec:
  completions: 1
  parallelism: 1
  template:
    metadata:
      name: k6-pod
    spec:
      restartPolicy: OnFailure
      containers:
        - name: k6
          image: grafana/k6:latest
          command: ["k6","run", "/scripts/k6-script.js"]
          volumeMounts:
            - name: k6-script-volume
              mountPath: /scripts/k6-script.js
              subPath: k6-script.js
      volumes:
        - name: k6-script-volume
          configMap:
            name: k6-script-configmap
  backoffLimit: 4

      
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-script-configmap
data:
  k6-script.js: | 
    import { check, group } from 'k6';
    import http from 'k6/http';

    export let options = {
      stages: [
        { duration: '1m', target: 20 },  // Ramp up to 20 virtual users over 1 minute
        // { duration: '3m', target: 20 },  // Stay at 20 virtual users for 3 minutes
        // { duration: '1m', target: 0 },   // Ramp down to 0 virtual users over 1 minute
      ],
    };

    export default function () {
      group('upload conversation to database', function () {
        const payload = JSON.stringify({
            chat: "jack:marcus",
            text: "hello marcus, i'm jack!",
            sender: "jack"
        });
        const headers = { 'Content-Type': 'application/json' };
        const res = http.post('http://http-server-service:8080/api/send', payload, { headers });

        check(res, {
          'status is 200': (r) => r.status === 200
        });
      });

      group('pull message from database', function () {

        const payload = JSON.stringify({
          chat: "jack:marcus",
          cursor: 0,
          limit: 10,
          reverse: true
        });
        const headers = { 'Content-Type': 'application/json' };
        const res = http.request('GET', 'http://http-server-service:8080/api/pull', payload, { headers });
        check(res, {
          'status is 200': (r) => r.status === 200
        });
      })
        
    }


